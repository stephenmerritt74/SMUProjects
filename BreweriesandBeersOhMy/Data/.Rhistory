source('~/.active-rstudio-document', echo=TRUE)
install.packages('doBy')
source('~/.active-rstudio-document', echo=TRUE)
install.packages('formattable')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
barplot(state_count[ ,2], names.arg = state_count[ ,1], col="transparent",
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
barplot(state_count[ ,2], names.arg = state_count[ ,1], col="transparent", horiz = TRUE,
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
par(las=3)
IScolors <- c("red", "green", "yellow", "blue",
"black", "white", "pink", "cyan",
"gray", "orange", "brown", "purple")
barplot(state_count[ ,2], names.arg = state_count[ ,1], col=rev(IScolors),
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
View(state_count)
View(state_count)
state_count %>%
arrange(desc(n))
par(las=3)
IScolors <- c("red", "green", "yellow", "blue",
"black", "white", "pink", "cyan",
"gray", "orange", "brown", "purple")
barplot(state_count[ ,2], names.arg = state_count[ ,1], col=rev(IScolors),
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
barplot(state_count[ ,2], names.arg = state_count[ ,1], col=rev(IScolors),
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
state_count <- as.data.frame(count(breweries, State))
state_count_ordered <- state_count %>%
arrange(desc(n))
par(las=3)
IScolors <- c("red", "green", "yellow", "blue",
"black", "white", "pink", "cyan",
"gray", "orange", "brown", "purple")
barplot(state_count_ordered[ ,2], names.arg = state_count[ ,1], col=rev(IScolors),
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
View(state_count_ordered)
?barplot
barplot(state_count_ordered[ ,2], col=rev(IScolors),
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
View(state_count_ordered)
state_count <- as.data.frame(count(breweries, State))
state_count_ordered <- state_count %>%
arrange(desc(n))
par(las=3)
IScolors <- c("red", "green", "yellow", "blue",
"black", "white", "pink", "cyan",
"gray", "orange", "brown", "purple")
barplot(state_count_ordered['n'], names.arg = state_count_ordered['State'], col=rev(IScolors),
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
state_count <- as.data.frame(count(breweries, State))
state_count_ordered <- state_count %>%
arrange(desc(n))
par(las=3)
IScolors <- c("red", "green", "yellow", "blue",
"black", "white", "pink", "cyan",
"gray", "orange", "brown", "purple")
barplot(state_count_ordered[ ,2], names.arg = state_count_ordered[ ,1], col=rev(IScolors),
main = "Number of Breweries per State, Including DC",
xlab = "States", ylab = "Number of Breweries", ylim = c(0,50))
source('~/.active-rstudio-document', echo=TRUE)
beer_data <- merge(beers, breweries, by = "Brewery_id", all = TRUE)
str(beer_data)
head(beer_data,6)
tail(beer_data,6)
# Create a .csv file named beer_data.csv from the beer_data data frame
write.csv(beer_data, file = "~/SMUProjects/6306CaseStudy1/Data/beer_data.csv")
length(unique(beer_data$Beer_ID)) == nrow(beer_data)
style_count <- as.data.frame(count(beer_data, Style))
length(unique(beer_data$Style))
sapply(beer_data,function(x) sum(is.na(x)))
median_abv_by_state<-summaryBy(ABV~State,data=beer_data,FUN=list(median),na.rm=TRUE)
par(las=3)
barplot(median_abv_by_state$ABV.median,names=median_abv_by_state$State,main="Median ABV by State",xlab="State",ylab="ABV")
median_abv_by_state[order(-median_abv_by_state$ABV.median),]
median_abv_by_state <- median_abv_by_state %.%
arrange(ABV.median)
median_abv_by_state <- median_abv_by_state %>%
arrange(ABV.median)
View(median_abv_by_state)
barplot(median_abv_by_state$ABV.median,names=median_abv_by_state$State,col = rev(IScolors), main="Median ABV by State",xlab="State",ylab="ABV")
median_abv_by_state[order(-median_abv_by_state$ABV.median),]
median_abv_by_state<-summaryBy(ABV~State,data=beer_data,FUN=list(median),na.rm=TRUE)
par(las=3)
median_abv_by_state <- median_abv_by_state %>%
arrange(desc(ABV.median))
barplot(median_abv_by_state$ABV.median,names=median_abv_by_state$State,col = rev(IScolors), main="Median ABV by State",xlab="State",ylab="ABV")
median_abv_by_state[order(-median_abv_by_state$ABV.median),]
median_ibu_by_state<-summaryBy(IBU~State,data=beer_data,FUN=list(median),na.rm=TRUE)
par(las=3)
median_ibu_by_state <- median_ibu_by_state %>%
arrange(desc(median_ibu_by_state))
barplot(median_ibu_by_state$IBU.median,names=median_ibu_by_state$State,main="Median IBU by State",xlab="State",ylab="IBU")
median_ibu_by_state[order(-median_ibu_by_state$IBU.median),]
median_ibu_by_state<-summaryBy(IBU~State,data=beer_data,FUN=list(median),na.rm=TRUE)
par(las=3)
median_ibu_by_state
median_ibu_by_state <- median_ibu_by_state %>%
arrange(desc(median_ibu_by_state))
median_ibu_by_state <- median_ibu_by_state %>%
arrange(desc(median_ibu_by_state))
median_ibu_by_state
median_ibu_by_state<-summaryBy(IBU~State,data=beer_data,FUN=list(median),na.rm=TRUE)
par(las=3)
max_abv<-max(beer_data$ABV,na.rm=TRUE)
beer_data[which(beer_data$ABV==max_abv),c(2,4,8,10)]
max_ibu<-max(beer_data$IBU,na.rm=TRUE)
beer_data[which(beer_data$IBU==max_ibu),c(2,5,8,10)]
funcsummary <- function(x, property){
medABV <- median(x[[property]], na.rm = TRUE)
mnABV <- mean(x[[property]],  na.rm = TRUE)
minABV <- min(x[[property]], na.rm = TRUE)
maxABV <- max(x[[property]], na.rm = TRUE)
sdABV <- sd(x[[property]], na.rm = TRUE)
report <- setNames(data.frame(medABV, mnABV, minABV, maxABV, sdABV, (maxABV - minABV)),
c("Median", "Mean", "Min", "Max", "StandardDeviation", "Range"))
# Digits rounds the output of report to two digits
print(report, digits = 3)
lessmnABV <- beer_data[beer_data$ABV < mnABV, ]
nrow(lessmnABV)
}
funcsummary(beer_data, "ABV")
abv_ibu <- beer_data[ ,c(4:5)]
length(abv_ibu$ABV)
# Remove NA values from abv_ibu
abv_ibu2 <- abv_ibu[complete.cases(abv_ibu), ]
# Verify number of beers removed from the data set that have NA values for either IBu or ABV
delta <- length(abv_ibu$ABV) - length(abv_ibu2$ABV)
delta
ggplot(abv_ibu2, aes(ABV, IBU, color = ABV)) + geom_point(shape = 16, size = 5, show.legend = FALSE,
alpha = .2) + theme_minimal() + geom_smooth(method = 'lm', color = "red") +
ggtitle("ABV vs. IBU") + labs(x = "Alcohol by Volume", y = "Int'l Bitterness Unit")
cor(abv_ibu2$ABV, abv_ibu2$IBU, method = "pearson")
# Create scatterplot of ABV vs. IBU
theme_update(plot.title = element_text(hjust = 0.5))
ggplot(abv_ibu2, aes(ABV, IBU, color = ABV)) + geom_point(shape = 16, size = 5, show.legend = FALSE,
alpha = .2) + theme_minimal() + geom_smooth(method = 'lm', color = "red") +
ggtitle("ABV vs. IBU") + labs(x = "Alcohol by Volume", y = "Int'l Bitterness Unit")
cor(abv_ibu2$ABV, abv_ibu2$IBU, method = "pearson")
source('/Users/Steve/SMUProjects/6306CaseStudy1/Code/Analysis.R', echo=TRUE)
